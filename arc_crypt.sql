DELIMITER //
DROP FUNCTION IF EXISTS ARC_XORSTR //
CREATE FUNCTION ARC_XORSTR (s CHAR(128),c SMALLINT) RETURNS CHAR(128) DETERMINISTIC
BEGIN
    DECLARE result CHAR(128) DEFAULT "";
    DECLARE i SMALLINT DEFAULT 1;
    DECLARE l SMALLINT DEFAULT 128;
    WHILE (i <= l) DO 
        SET result = CONCAT(result, CHAR(ASCII(SUBSTRING(s,i,1))^c));
        SET i = i + 1;  
    END WHILE;

    RETURN result;
END//

DROP FUNCTION IF EXISTS ARC_XORSTRS //
CREATE FUNCTION ARC_XORSTRS (s CHAR(64),c CHAR(64)) RETURNS CHAR(64) DETERMINISTIC
BEGIN
    DECLARE result CHAR(128) DEFAULT "";
    DECLARE i SMALLINT DEFAULT 1;
    DECLARE l SMALLINT DEFAULT 0;
    SET l = LENGTH(s);
    IF LENGTH(c) < l THEN
        SET l = LENGTH(c);
    END IF;
    
    WHILE (i <= l) DO 
        SET result = CONCAT(result, CHAR(ASCII(SUBSTRING(s,i,1)) ^ ASCII(SUBSTRING(c,i,1))));
        SET i = i + 1;  
    END WHILE;

    RETURN result;
END//

DROP FUNCTION IF EXISTS ARC_HMAC_SHA_512 //
CREATE FUNCTION ARC_HMAC_SHA_512 (saltkey CHAR(128),passwd CHAR(128)) RETURNS CHAR(64) DETERMINISTIC
BEGIN
    DECLARE result CHAR(64) DEFAULT "";
    SET result = UNHEX(SHA2(CONCAT(ARC_XORSTR(passwd,54),saltkey),512));
    SET result = UNHEX(SHA2(CONCAT(ARC_XORSTR(passwd,92),result),512));
    RETURN result;
END//


DROP FUNCTION IF EXISTS ARC_PBKDF2 //
CREATE FUNCTION ARC_PBKDF2 (saltkey CHAR(64),passwd CHAR(64),l INT) RETURNS CHAR(64) DETERMINISTIC
BEGIN
    DECLARE prevhash CHAR(64) DEFAULT "";
    DECLARE xorhash CHAR(64) DEFAULT "";
    DECLARE i INT DEFAULT 1;

    SET xorhash = ARC_HMAC_SHA_512(CONCAT(saltkey,UNHEX("00000001")),passwd);
    SET prevhash = xorhash;
    WHILE (i < l) DO 
        SET prevhash = ARC_HMAC_SHA_512(prevhash,passwd);
        SET xorhash = ARC_XORSTRS(xorhash,prevhash);
        SET i = i + 1;  
    END WHILE;
    RETURN xorhash;
END//
DELIMITER ;